(this.webpackJsonp=this.webpackJsonp||[]).push([["products-f-a-q"],{"+NZt":function(e,t){e.exports='{% block item_faq_detail %}\n    <sw-page class="item-faq-detail">\n        <template slot="smart-bar-actions">\n            <sw-button :routerLink="{ name: \'item.faq.list\' }">\n                {{ $t(\'faq.detail.cancelButtonText\') }}\n            </sw-button>\n\n            <sw-button-process\n                :isLoading="isLoading"\n                :processSuccess="processSuccess"\n                variant="primary"\n                @process-finish="saveFinish"\n                @click="onClickSave">\n                {{ $t(\'faq.detail.saveButtonText\') }}\n            </sw-button-process>\n        </template>\n\n        <template slot="content">\n            <sw-card-view>\n                <sw-card v-if="faq" :isLoading="isLoading">\n                    <sw-field :label="$t(\'faq.detail.questionLabel\')" v-model="faq.question"></sw-field>\n                    <sw-field :label="$t(\'faq.detail.answerLabel\')" v-model="faq.answer"></sw-field>\n\n\n                    <sw-entity-many-to-many-select\n                        :localMode="faq.isNew()"\n                        :label="$t(\'faq.detail.assignProductsLabel\')"\n                        v-model="faq.products">\n                    </sw-entity-many-to-many-select>\n                </sw-card>\n            </sw-card-view>\n        </template>\n    </sw-page>\n{% endblock %}\n'},"+de5":function(e,t){e.exports='{% block item_faq_list %}\n    <sw-page class="item-faq-list">\n        {% block item_faq_list_smart_bar_actions %}\n            <template #smart-bar-actions>\n                <sw-button variant="primary" :routerLink="{ name: \'item.faq.create\' }">\n                    {{ $tc(\'faq.list.addButtonText\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n        <template #content>\n            {% block item_faq_list_content %}\n                <sw-entity-listing\n                    v-if="faqs"\n                    :items="faqs"\n                    :repository="repository"\n                    :showSelection="false"\n                    :columns="columns"\n                    detailRoute="item.faq.detail">\n                </sw-entity-listing>\n            {% endblock %}\n        </template>\n    </sw-page>\n{% endblock %}\n'},JiF8:function(e){e.exports=JSON.parse('{"faq":{"general":{"mainMenuItemGeneral":"Faqs","descriptionTextModule":"Management of Frequently Asked Questions"},"list":{"addButtonText":"Add faq","columnName":"Name","columnQuestion":"Question","columnAnswer":"Answer"},"detail":{"nameLabel":"Name","questionLabel":"Question","answerLabel":"Answer","assignProductsLabel":"Assign Products","cancelButtonText":"Cancel","saveButtonText":"Save","errorTitle":"Error saving the faq"}}}')},P12l:function(e,t){const{Component:a}=Shopware;a.extend("item-faq-create","item-faq-detail",{methods:{getFaq(){this.faq=this.repository.create(Shopware.Context.api)},onClickSave(){this.isLoading=!0,this.repository.save(this.faq,Shopware.Context.api).then((()=>{this.isLoading=!1,this.$router.push({name:"item.faq.detail",params:{id:this.faq.id}})})).catch((e=>{this.isLoading=!1,this.createNotificationError({title:this.$tc("faq.detail.errorTitle"),message:e})}))}}})},PtQA:function(e){e.exports=JSON.parse('{"faq":{"general":{"mainMenuItemGeneral":"Faqs","descriptionTextModule":"Management von Frequently Asked Questions"},"list":{"addButtonText":"Faq hinzufügen","columnName":"Name","columnQuestion":"Frage","columnAnswer":"Antwort"},"detail":{"nameLabel":"Name","questionLabel":"Frage","answerLabel":"Antwort","assignProductsLabel":"Produkt hinzufügen","cancelButtonText":"Abbrechen","saveButtonText":"Speichern","errorTitle":"Fehler beim speichern des faq\'s aufgetreten"}}}')},q1Mv:function(e,t,a){"use strict";a.r(t);a("P12l");var n=a("+NZt"),i=a.n(n);const{Component:s,Mixin:o}=Shopware;s.register("item-faq-detail",{template:i.a,inject:["repositoryFactory"],mixins:[o.getByName("notification")],metaInfo(){return{title:this.$createTitle()}},data:()=>({faq:null,isLoading:!1,processSuccess:!1,repository:null}),created(){this.repository=this.repositoryFactory.create("faq"),this.getFaq()},methods:{getFaq(){this.repository.get(this.$route.params.id,Shopware.Context.api).then((e=>{this.faq=e}))},onClickSave(){this.isLoading=!0,this.repository.save(this.faq,Shopware.Context.api).then((()=>{this.getFaq(),this.isLoading=!1,this.processSuccess=!0})).catch((e=>{this.isLoading=!1,this.createNotificationError({title:this.$t("faq.detail.errorTitle"),message:e})}))},saveFinish(){this.processSuccess=!1}}});var r=a("+de5"),l=a.n(r);const{Component:c}=Shopware,{Criteria:p}=Shopware.Data;c.register("item-faq-list",{template:l.a,inject:["repositoryFactory"],data:()=>({repository:null,faqs:null}),metaInfo(){return{title:this.$createTitle()}},computed:{columns(){return[{property:"question",dataIndex:"question",label:this.$t("faq.list.columnQuestion"),routerLink:"item.faq.detail",inlineEdit:"string",allowResize:!0,primary:!0},{property:"answer",dataIndex:"answer",label:this.$t("faq.list.columnAnswer"),inlineEdit:"string",allowResize:!0}]}},created(){this.repository=this.repositoryFactory.create("faq"),this.repository.search(new p,Shopware.Context.api).then((e=>{this.faqs=e}))}});var m=a("PtQA"),d=a("JiF8");const{Module:u}=Shopware;u.register("item-faq",{type:"plugin",name:"faq",title:"faq.general.mainMenuItemGeneral",description:"faq.general.descriptionTextModule",color:"#fe7745",icon:"default-shopping-paper-bag-product",snippets:{"de-DE":m,"en-GB":d},routes:{list:{component:"item-faq-list",path:"list"},detail:{component:"item-faq-detail",path:"detail/:id",meta:{parentPath:"item.faq.list"}},create:{component:"item-faq-create",path:"create",meta:{parentPath:"item.faq.list"}}},navigation:[{label:"faq.general.mainMenuItemGeneral",color:"#fe7745",path:"item.faq.list",parent:"sw-catalogue",icon:"default-shopping-paper-bag-product",position:30}]})}},[["q1Mv","runtime"]]]);